
upstream flask_server_5000 {
    server http://172.17.0.2:5000;
}

upstream roundrobin {
    # default is round robin
    server 127.0.0.1:7001;
    server 127.0.0.1:7002;
    server 127.0.0.1:7003;
}

upstream leastconn {
    # The server with the fewest connections will get traffic
    least_conn;
    server 127.0.0.1:7001;
    server 127.0.0.1:7002;
    server 127.0.0.1:7003;
}

upstream iphash {
    # Connections will stick to the same server
    ip_hash;
    server 127.0.0.1:7001;
    server 127.0.0.1:7002;
    server 127.0.0.1:7003;
}

upstream weighted {
    # More connections will be sent to the weighted server
    server 127.0.0.1:7001 weight=2;
    server 127.0.0.1:7002;
    server 127.0.0.1:7003;
}

server {
    listen 80 default_server;

    root /var/www;
    access_log /var/log/nginx/server.access.log;
    error_log /var/log/nginx/server.error.log;
    index index.html;

    location / {
        try_files $uri $uri/ =404;
    }

#    location /images {
#        autoindex on;
#        access_log /var/log/nginx/binaryville.image.access.log;
#    }
#    error_page 404 /404.html;
#    location = /404.html {
#        internal;
#    }

#    error_page 500 502 503 504 /50x.html;
#    location = /50x.html {
#        internal;
#    }

#    location /500 {
#        fastcgi_pass unix:/this/will/fail;
#    }

    location /portforever {
        # Trailing slash is key!
        proxy_pass http://flask_server_5000/;

        # Logging for access to the proxy
        access_log /var/log/nginx/server.portforever.access.log;
        error_log /var/log/nginx/server.portforever.error.log;
    }

#    location /roundrobin {
        # Trailing slash is key!
#        proxy_pass http://roundrobin/;
#    }

#    location /leastconn {
        # Trailing slash is key!
#        proxy_pass http://leastconn/;
#    }

#    location /iphash {
        # Trailing slash is key!
#        proxy_pass http://iphash/;
#    }

#    location /weighted {
        # Trailing slash is key!
#        proxy_pass http://weighted/;
#    }

#    error_page 401 403 /403.html;
#    location /private {
#        auth_basic "Please authenticate...";
#        auth_basic_user_file /etc/nginx/passwords;

        # To keep the Dockerfile configuraiton as simple as possible,
        # the allow and deny directives are commented out.
        # However, the basic authentication is still in place for
        # the /private location
        # allow all;
        # deny all;
#    }
}
