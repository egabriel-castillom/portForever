PRIMERO INVESTIGA, DESPUÉS DISEÑA, LUEGO CONSTRUYE.
  Plantilla, estrucutra principal para página web.
  Todo mediante scroll.
	{BOTON ABOUT ME, MOSTRAR UNA PLANTILLA}
-AI OUTCOME-
Para sobreponer un div sobre otro y que el div hermano siga viéndose en el fondo, puedes utilizar las propiedades CSS position y z-index. Primero, asegúrate de que ambos divs tengan una posición establecida, como position: relative o position: absolute. Luego, establece un valor de z-index más alto para el div que deseas que aparezca en la capa superior. El valor de z-index determina el orden de apilamiento de los elementos, por lo que un elemento con un valor de z-index más alto se mostrará sobre un elemento con un valor de z-index más bajo.

Aquí tienes un ejemplo de cómo podrías hacerlo:

<div class="container">
  <div class="background">Contenido de fondo</div>
  <div class="overlay">Contenido de la capa superior</div>
</div>

<style>
  .container {
    position: relative;
  }
  .background {
    position: relative;
    z-index: 1;
  }
  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 2;
  }
</style>
Copiar
En este ejemplo, el div con la clase .overlay se mostrará sobre el div con la clase .background debido a que tiene un valor de z-index más alto. También se le ha dado una posición absoluta para que se pueda posicionar en relación con su contenedor padre.

GITPUSH

import pymysql

def get_connection():
    connection = pymysql.connect(
        host='127.0.0.1',
        user='root',
        password='NUNC4m13nt!',
        db='test'
    )
  return connection

def execute_query(connection, query, params=None):
    """Ejecuta una consulta SQL en la base de datos."""
    with connection.cursor() as cursor:
        cursor.execute(query, params)
        return cursor.fetchall()

results = execute_query(get_connection(),'SELECT * FROM users')
print(results)


Aquí hay una lista de comandos útiles para crear y manejar una base de datos local en MySQL:

CREATE DATABASE [database name]; - Crea una nueva base de datos.
USE [database name]; - Selecciona la base de datos para su uso.
CREATE TABLE [table name] (column1 datatype, column2 datatype, ...); - Crea una nueva tabla en la base de datos seleccionada.
INSERT INTO [table name] (column1, column2, ...) VALUES (value1, value2, ...); - Inserta un nuevo registro en una tabla específica.
SELECT * FROM [table name]; - Devuelve todos los registros de una tabla específica.
UPDATE [table name] SET column1 = value1, column2 = value2, ... WHERE condition; - Actualiza registros existentes en una tabla específica que cumplan con una condición específica.
DELETE FROM [table name] WHERE condition; - Elimina registros existentes en una tabla específica que cumplan con una condición específica.
DROP TABLE [table name]; - Elimina una tabla específica de la base de datos.
DROP DATABASE [database name]; - Elimina una base de datos específica.
ALTER TABLE miTabla ADD COLUMN nuevaColumna VARCHAR(255) AFTER columnaExistente;
ALTER TABLE miTabla ADD COLUMN nuevaColumna VARCHAR(255) AFTER columnaExistente;


CONTINÚA CON LAS SIGUIENTES SECCIONES Y POPUPS. 
  Hosting.... HOW TO ONLINE HOST?